/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopclient;

import service.Capacitor;
import service.User;
import tablemodel.CapacitorTableModel;

/**
 *
 * @author Destr
 */
public class CapacitorsTableJFrame extends javax.swing.JFrame {
    private User user;

    public CapacitorsTableJFrame() {
    }
    
    public CapacitorsTableJFrame(User user) {
        initComponents();
        this.user = user;
        jTable1.setModel(new CapacitorTableModel(getAllCapacitors()));
        if(!user.isPrivilege()){
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton3.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Add");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewCapacitor(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteCapacitor(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeCapacitor(evt);
            }
        });

        jButton4.setText("Buy");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buyCapacitor(evt);
            }
        });

        jButton5.setText("Back");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backToPreviousWindow(evt);
            }
        });

        jButton6.setText("Refresh");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshCapacitors(evt);
            }
        });

        jButton7.setText("↑");
        jButton7.setToolTipText("");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortByAscCap(evt);
            }
        });

        jButton8.setText("↓");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortByDesCap(evt);
            }
        });

        jLabel1.setText("SortByPrice");

        jLabel2.setText("SortByCapacity");

        jButton9.setText("↑");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortByAscCapPrice(evt);
            }
        });

        jButton10.setText("↓");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortByDesCapPrice(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton6)
                            .addComponent(jButton9))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(jButton5)
                            .addComponent(jButton10))
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshCapacitors(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshCapacitors
        jTable1.setModel(new CapacitorTableModel(getAllCapacitors()));
    }//GEN-LAST:event_refreshCapacitors

    private void addNewCapacitor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewCapacitor
        addCapacitorJFrame addNewCapacitorJFrame = new addCapacitorJFrame();
        addNewCapacitorJFrame.setVisible(true);        
    }//GEN-LAST:event_addNewCapacitor

    private void deleteCapacitor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteCapacitor
        int selectedRow = jTable1.getSelectedRow();
        removeCapacitor((int)jTable1.getValueAt(selectedRow, 0));
    }//GEN-LAST:event_deleteCapacitor

    private void changeCapacitor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeCapacitor
        int selectedRow = jTable1.getSelectedRow();
//        int id = (int)jTable1.getValueAt(selectedRow, 0);
        Capacitor capacitor = new Capacitor();
        capacitor.setId((int)jTable1.getValueAt(selectedRow, 0));
        capacitor.setName((String)jTable1.getValueAt(selectedRow, 1));
        capacitor.setCapacity((int)jTable1.getValueAt(selectedRow, 2));
        capacitor.setPrice((double)jTable1.getValueAt(selectedRow, 3));
        capacitor.setCount((int)jTable1.getValueAt(selectedRow, 4));
        UpdateCapacitorJFrame updateCapacitorJFrame = new UpdateCapacitorJFrame(capacitor);
        updateCapacitorJFrame.setVisible(true);
    }//GEN-LAST:event_changeCapacitor

    private void sortByAscCap(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortByAscCap
        jTable1.setModel(new CapacitorTableModel(sortByAscendingCapacitorCap()));
    }//GEN-LAST:event_sortByAscCap

    private void sortByDesCap(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortByDesCap
        jTable1.setModel(new CapacitorTableModel(sortByDescendingCapacitorCap()));
    }//GEN-LAST:event_sortByDesCap

    private void sortByAscCapPrice(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortByAscCapPrice
        jTable1.setModel(new CapacitorTableModel(sortByAscendingCapacitorPrice()));
    }//GEN-LAST:event_sortByAscCapPrice

    private void sortByDesCapPrice(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortByDesCapPrice
        jTable1.setModel(new CapacitorTableModel(sortByDescendingCapacitorPrice()));
    }//GEN-LAST:event_sortByDesCapPrice

    private void buyCapacitor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buyCapacitor
        int selectedRow = jTable1.getSelectedRow();
        int idCapacitor = (int)jTable1.getValueAt(selectedRow, 0);
        BuyCapacitorJFrame buyCapacitorJFrame = new BuyCapacitorJFrame(user, idCapacitor);
        buyCapacitorJFrame.setVisible(true);
        
    }//GEN-LAST:event_buyCapacitor

    private void backToPreviousWindow(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToPreviousWindow
        MenuJFrame menuJFrame = new MenuJFrame(user);
        menuJFrame.setVisible(true);
        this.dispose();        
    }//GEN-LAST:event_backToPreviousWindow

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CapacitorsTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CapacitorsTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CapacitorsTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CapacitorsTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CapacitorsTableJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<service.Capacitor> getAllCapacitors() {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        return port.getAllCapacitors();
    }

    private static void removeCapacitor(java.lang.Integer id) {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        port.removeCapacitor(id);
    }

    private static void updateCapacitor(java.lang.Integer id, service.Capacitor capacitor) {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        port.updateCapacitor(id, capacitor);
    }

    private static java.util.List<service.Capacitor> sortByAscendingCapacitorCap() {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        return port.sortByAscendingCapacitorCap();
    }

    private static java.util.List<service.Capacitor> sortByAscendingCapacitorPrice() {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        return port.sortByAscendingCapacitorPrice();
    }

    private static java.util.List<service.Capacitor> sortByDescendingCapacitorCap() {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        return port.sortByDescendingCapacitorCap();
    }

    private static java.util.List<service.Capacitor> sortByDescendingCapacitorPrice() {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        return port.sortByDescendingCapacitorPrice();
    }

    private static boolean buyCapacitor_1(java.lang.Integer idCapacitor, java.lang.Integer idUser, java.lang.Integer capacitorCount) {
        service.StoreWS_Service service = new service.StoreWS_Service();
        service.StoreWS port = service.getStoreWSPort();
        return port.buyCapacitor(idCapacitor, idUser, capacitorCount);
    }
}
